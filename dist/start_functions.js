'use strict';

module.exports = {

    helloMessage: function helloMessage(tg, message) {
        var text = '‚ù£ –û–∑–æ–Ω–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ OZONE BOX ‚ù£Ô∏è \n' + '\n' + '–ü—Ä–∏–≤–µ—Ç!    ' + '\n' + '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞—Ç—å –≤—Å—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Å–º–µ—Ç–∏–∫–µ Ozone Box  üòé' + '\n' + '–ù–∞—á–Ω–∏ —Å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é!';

        var options = {
            "parse_mode": "Markdown",
            "reply_markup": {
                "force_reply": true,
                //"one_time_keyboard": true,
                "resize_keyboard": true,
                // "remove_keyboard": true,

                "keyboard": [[{
                    text: "üî∏ –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫ ",

                    request_contact: true
                }, "üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]]

            }
        };

        tg.sendMessage(message.chat.id, text, options);
    },

    sendStartMessage: function sendStartMessage(tg, message) {
        var text = '<b> ‚ù£Ô∏è –û–∑–æ–Ω–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ OZONE BOX ‚ù£Ô∏è \n</b>' + '\n' + '–ù—É –∫–∞–∫, –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ï—Å–ª–∏ –¥–∞, —Ç–æ —Å–∫–æ—Ä–µ–µ –∑–∞–∫–∞–∑—ã–≤–∞–π –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫! üòâ';

        var catalogButton = {
            text: '–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è  üåü',
            callback_data: 'catalogCmd'

        };

        var FAQButton = {
            text: "FAQ  ‚ùì",
            callback_data: 'FAQCmd'
        };

        var aboutButton = {
            text: "–û –Ω–∞—Å  ‚≠êÔ∏è",
            callback_data: 'aboutCmd'
        };

        var principButton = {
            text: "–ü—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è  üåê ",
            callback_data: 'principCmd'
        };

        var callBackButton = {
            text: "–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫  ‚òé",
            callback_data: 'callBackCmd'
        };

        var feedBackButton = {
            text: " –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üòò",
            callback_data: 'feedBackCmd'
        };

        var goToBeforeAfter = {
            text: '–î–æ/–ü–æ—Å–ª–µ   üôÄüòª',
            callback_data: 'goToBeforeAfterCmd'

        };
        var options = Object.assign({}, {
            parse_mode: 'HTML',
            reply_markup: JSON.stringify({

                inline_keyboard: [[aboutButton], [principButton], [goToBeforeAfter], [catalogButton], [FAQButton], [callBackButton], [feedBackButton]]
            })
        });
        tg.sendMessage(message.chat.id, text, options);
    },

    sendStartMessage2: function sendStartMessage2(tg, callbackQuery) {
        var text = '<b>–û–∑–æ–Ω–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ OZONE BOX \n</b>' + '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥  –∫–æ—Å–º–µ—Ç–∏–∫–∏ –∏ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä, –∞ —Ç–∞–∫–∂–µ –∑–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n' + '\n' + '\n';

        var catalogButton = {
            text: '–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è  üåü',
            callback_data: 'catalogCmd'

        };

        var FAQButton = {
            text: "FAQ  ‚ùì",
            callback_data: 'FAQCmd'
        };

        var aboutButton = {
            text: "–û –Ω–∞—Å  ‚≠êÔ∏è",
            callback_data: 'aboutCmd'
        };

        var principButton = {
            text: "–ü—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è  üåê ",
            callback_data: 'principCmd'
        };

        var callBackButton = {
            text: "–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫  ‚òé",
            callback_data: 'callBackCmd'
        };

        var goToBeforeAfter = {
            text: '–î–æ/–ü–æ—Å–ª–µ   üôÄüòª',
            callback_data: 'goToBeforeAfterCmd'

        };

        var feedBackButton = {
            text: " –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üòò",
            callback_data: 'feedBackCmd'
        };

        var options = Object.assign({}, {
            parse_mode: 'HTML',
            reply_markup: JSON.stringify({

                inline_keyboard: [[aboutButton], [principButton], [goToBeforeAfter], [catalogButton], [FAQButton], [callBackButton], [feedBackButton]]
            })
        }, {
            message_id: callbackQuery.message.message_id,
            chat_id: callbackQuery.message.chat.id
        });
        tg.editMessageText(text, options);
    }
};